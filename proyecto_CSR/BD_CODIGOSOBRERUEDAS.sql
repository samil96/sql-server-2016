--CREACION DE LA BD
USE MASTER
GO
CREATE DATABASE BD_CODIGOSOBRERUEDAS
GO
USE BD_CODIGOSOBRERUEDAS
GO

--CREACION DE TABLAS
--STAFF:AREA
CREATE TABLE STAFF(
ID_STAFF CHAR(5) NOT NULL PRIMARY KEY,
NAME_STAFF VARCHAR(80) NOT NULL UNIQUE,
QUANTITY INT,
)
GO
--LEVEL:NIVEL
CREATE TABLE LEVELL(
ID_LEVEL CHAR(5) NOT NULL PRIMARY KEY,
NAME_LEVEL VARCHAR(20) NOT NULL,
)
GO
--USER:USUARIO
CREATE TABLE USS (
ID_USER CHAR(5) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(100) NOT NULL,
LAST_NAME VARCHAR(100) NOT NULL,
EMAIL VARCHAR(200) UNIQUE NOT NULL,
PASS VARCHAR (20) NOT NULL,
DNI INT UNIQUE NOT NULL,
CELL_PHONE_NUMBER INT NULL,
ADDRESS VARCHAR (150) NULL,
ID_LEVEL CHAR(5) NOT NULL REFERENCES LEVELL
)
GO
--STAFF_USER: AREA-USUARIO 
CREATE TABLE STAFF_USER (
ID_STAFF_USER CHAR(5) NOT NULL PRIMARY KEY,
QUANTITY INT,
ID_USER CHAR(5) NOT NULL REFERENCES USS,
ID_STAFF CHAR(5) NOT NULL REFERENCES STAFF
)
GO
--PROFESSOR: DOCENTE
CREATE TABLE PROFESSOR (
ID_PROFESSOR CHAR(5) NOT NULL PRIMARY KEY,
ID_USER CHAR(5) NOT NULL REFERENCES USS
)
GO
--TYPE_USER: TIPO DE USUARIO
CREATE TABLE TYPE_USER(
ID_TYPE_USER CHAR(5) NOT NULL PRIMARY KEY,
NAME_TYPE VARCHAR(80) NOT NULL UNIQUE,
ID_USER CHAR(5) NOT NULL REFERENCES USS
)
GO
--ENROLLMENT: INSCRIPCION
CREATE TABLE ENROLLMENT (
ID_ENROLL CHAR(5) NOT NULL PRIMARY KEY,
ENROLL CHAR(1) NOT NULL,
QUANTITY INT NULL,
)
GO
--PROGRAM : PROGRAMA
CREATE TABLE PROGRAM (
ID_PROGRAM CHAR(5) NOT NULL PRIMARY KEY,
DURATION INT NOT NULL,
TITLE VARCHAR(250) NULL,
QUANTITY INT NULL,
CHECK (QUANTITY BETWEEN 1 AND 20)

)
GO
--CODER:ALUMNO
CREATE TABLE CODER(
ID_CODER CHAR(5) NOT NULL PRIMARY KEY,
ID_USER CHAR(5) NOT NULL REFERENCES USS,
ID_ENROLL CHAR(5) NOT NULL REFERENCES ENROLLMENT,
ID_PROGRAM CHAR(5) NOT NULL REFERENCES PROGRAM,
IMPAIRMENT CHAR(1) NULL
)
GO
--SCHEDULE:HORARIO
CREATE TABLE SCHEDULE(
ID_SCHEDULE CHAR(5) NOT NULL PRIMARY KEY,
START_HOUR TIME NOT NULL,
END_HOUR TIME NOT NULL,
DATE_START DATE NOT NULL,
DATE_END DATE NOT NULL,
ID_PROGRAM CHAR(5) NOT NULL REFERENCES PROGRAM
)
GO
--COURSE:CURSO
CREATE TABLE COURSE(
ID_COURSE CHAR(5) NOT NULL PRIMARY KEY,
NAME_COURSE VARCHAR(80) NOT NULL,
ID_PROFESSOR CHAR(5) NOT NULL REFERENCES PROFESSOR,
ID_SCHEDULE CHAR(5) NOT NULL REFERENCES SCHEDULE,
ID_PROGRAM CHAR(5) NOT NULL REFERENCES PROGRAM
)
GO
--CATEGORY: CATEGORIA
CREATE TABLE CATEGORY(
ID_CATEGORY CHAR(5) NOT NULL PRIMARY KEY,
NAME_CATEGORY VARCHAR(80) NOT NULL,
ID_COURSE CHAR(5) NOT NULL REFERENCES COURSE
)
GO
--TOPIC _ TEMA
CREATE TABLE TOPIC(
ID_TOPIC CHAR(5) NOT NULL PRIMARY KEY,
NAME_TOPIC VARCHAR(150) UNIQUE NOT NULL
)
GO
--WEBINAR : SEMINARIO WEB
CREATE TABLE WEBINAR(
ID_WEB CHAR(5) NOT NULL PRIMARY KEY,
ID_TOPIC CHAR(5) NOT NULL REFERENCES TOPIC,
DURATION INT NOT NULL,
CHECK (DURATION>=1),
)
GO
--WEBINAR_USER : SEMINARIO WEB_ USUARIO
CREATE TABLE WEBINAR_USER(
ID_WEB CHAR(5) NOT NULL REFERENCES WEBINAR,
ID_USER CHAR(5) NOT NULL REFERENCES USS,
ID_SCHEDULE CHAR(5) NOT NULL REFERENCES SCHEDULE,
DETAIL VARCHAR(150) NULL
)


--CREAR INDICES
--INDICE QUE BUSCA CURSO POR DOCENTE 
CREATE INDEX IDX_COURSOPROF ON [dbo].[COURSE]([NAME_COURSE],[ID_PROFESSOR])

--INDICE QUE BUSCA LOS WEBINARS QUE TENGA LA DURACION
CREATE INDEX IDX_WEBDUR ON  [dbo].[WEBINAR]([ID_TOPIC]) INCLUDE ([DURATION])

--INDICE QUE BUSCA LOS ALUMNOS Y SU DISCAPACIDAD
CREATE INDEX ICX_CODEM ON [dbo].[CODER](IMPAIRMENT) INCLUDE ([ID_CODER],[ID_USER])



--ALMACENAMIENTO REGISTROS
SELECT * FROM USS;
SELECT * FROM CODER;
SELECT * FROM [dbo].[PROFESSOR];
SELECT * FROM LEVELL;
SELECT * FROM COURSE;
SELECT * FROM PROGRAM;
SELECT * FROM SCHEDULE;
SELECT * FROM PROFESSOR;
SELECT * FROM CATEGORY;
INSERT INTO LEVELL VALUES('A1','1');
INSERT INTO LEVELL VALUES('I2','2');
INSERT INTO LEVELL VALUES('D3','3');
INSERT INTO LEVELL VALUES('C4','4');
INSERT INTO USS VALUES ('C1234', 'JIMENA','SAMARITANO AYALA','JIMENA@GMAIL.COM','123454HFDGL',12345678,999999999,'AV. QUECHUAS','C4')
INSERT INTO USS VALUES ('A6378', 'BRIAN','JACOBO SALAZAR','ZALAZAR_96@HOTMAIL.COM','123454HFDGL',12345677,'999999999','JR. CARABAY 800','A1')
INSERT INTO USS VALUES ('C0978', 'FABIOLA','PADILLA MENA','FABB_98_PM@GMAIL.COM','123454HFDGL','12345676','999999999','AV. LAMPA 456','C4')
INSERT INTO USS VALUES ('D7465', 'FERNANDO','SILUPU PAREDES','SILUPU_FER@GMAIL.COM','123454HFDGL','12155780','999999999','AV. GARCIA NARANJO 570','D3')
INSERT INTO PROGRAM (ID_PROGRAM, DURATION, TITLE, QUANTITY) VALUES ('MR211','3','BACKEND RUEDAS','20')
INSERT INTO PROGRAM (ID_PROGRAM, DURATION, TITLE, QUANTITY) VALUES ('MR212','3','FRONTEND RUEDAS','20')
INSERT INTO PROGRAM (ID_PROGRAM, DURATION, TITLE, QUANTITY) VALUES ('MA211','6','FULL STACK RUEDAS','10')
INSERT INTO ENROLLMENT VALUES('S121M','1','')
INSERT INTO ENROLLMENT VALUES('N121M','0','')
INSERT INTO CODER VALUES('C21M1','C1234','S121M','MR211','1')
INSERT INTO CODER VALUES('C21M2','C0978','S121M','MA211','1')
INSERT INTO [dbo].[SCHEDULE] VALUES ('H1','09:00:00','12:00:00','03-15-2021','06-15-2021','MR212')
INSERT INTO [dbo].[SCHEDULE] VALUES ('H2','04:00:00','07:00:00','03-15-2021','06-15-2021','MR212')
INSERT INTO [dbo].[SCHEDULE] VALUES ('H3','09:00:00','12:00:00','06-01-2021','08-01-2021','MA211')
INSERT INTO [dbo].[SCHEDULE] VALUES ('H4','04:00:00','07:00:00','08-13-2021','10-15-2021','MR212')
INSERT INTO [dbo].[PROFESSOR] VALUES ('P1F21','D7465')
INSERT INTO [dbo].[PROFESSOR] VALUES ('P2F21','A6378')
INSERT INTO COURSE VALUES ('F6784','FRONTEND CON REACTJS, JS, VUEJS','P1F21','H1','MR212')
INSERT INTO COURSE VALUES ('F2723','FULLSTACK PYTHON, DJANGO, FLASK','P2F21','H2','MR212')
INSERT INTO COURSE VALUES ('F374M','BACKEND WITH DART AND KOTLIN ','P2F21','H1','MR212')
INSERT INTO [dbo].[CATEGORY] VALUES ('C1F','FRONTEND','F6784')
INSERT INTO [dbo].[CATEGORY] VALUES ('C2B','BAKEND','F3745')
INSERT INTO [dbo].[CATEGORY] VALUES ('C21B','BAKEND','F3745')
INSERT INTO [dbo].[CATEGORY] VALUES ('C3BD','DESARROLLADOR','F2723')

--DELETE FROM [dbo].[CATEGORY] WHERE [ID_CATEGORY]='C3BD'

--CONSULTAS
--LOS 2 USUARIOS
SELECT TOP 2 * FROM [dbo].[USS]
--MUESTRA SOLAMENTE LOS NOBRES DE lOS CURSOS
SELECT DISTINCT [NAME_COURSE] FROM [dbo].[COURSE]
--MUESTRA LA DURACION DEL PROGRAMA IGUAL A 3 Y LA CNATIDAD IGUAL A 20
SELECT * FROM [dbo].[PROGRAM] WHERE [DURATION]=3 AND [QUANTITY]=20
--MUESTRA LOS NOMBRE Y APELLIDOS DEL USUARIO SEGUN SU NIVEL INICIE CON C
SELECT  [FIRST_NAME],[LAST_NAME] FROM [dbo].[USS] WHERE [ID_LEVEL] LIKE 'C%'
--VISUALIZAR LOS INDICES
SELECT * FROM SYS.indexes WHERE NAME LIKE 'IDX%'

--SUBCONSULTA
--CONSULTA DEL PROGRAMA QUE TIENE UNA DURACION IGUAL A 3 MESES
SELECT *
	FROM [dbo].[PROGRAM]
	WHERE [DURATION] IN
		(SELECT [DURATION]
		FROM  [dbo].[PROGRAM]
		WHERE [DURATION]=3
		)

--MOSTRAR LA FECHA DESCENDENTE DEL CRONOGRAMA
SELECT [ID_PROGRAM] ,[DATE_START], [DATE_END] FROM 	[dbo].[SCHEDULE] ORDER BY 2 ASC

--MOSTRAR LOS USUARIOS QUE SEAN CODER
GO
CREATE FUNCTION FUNCTION_CODERS()
	RETURNS TABLE
		AS
			RETURN(SELECT * FROM [dbo].[USS] WHERE [ID_LEVEL] LIKE 'C%')
GO
SELECT * FROM FUNCTION_CODERS()
GO
--MOSTRAR CURSO QUE SE INGRESA
CREATE FUNCTION FUNCTION_COURSE
	(@CUR VARCHAR (10)
	)
	RETURNS TABLE 
	AS 
		RETURN(SELECT [ID_COURSE],[NAME_COURSE] FROM  [dbo].[COURSE]
		AS COUR INNER JOIN [dbo].[PROGRAM] AS PROG ON 
		COUR.[ID_PROGRAM]=PROG.[ID_PROGRAM] WHERE COUR.[NAME_COURSE] LIKE @CUR+'%')
GO
SELECT * FROM FUNCTION_COURSE('F')

DROP FUNCTION FUNCTION_COURSE

--AGRUPAMIENTO
SELECT * FROM [dbo].[COURSE] INNER JOIN [dbo].[CATEGORY]
ON [dbo].[COURSE].[ID_COURSE] = [dbo].[CATEGORY].[ID_COURSE]

SELECT   P.TITLE, C.NAME_COURSE, C.ID_PROFESSOR, P.DURATION     
FROM     [dbo].[PROGRAM]   P FULL JOIN  [dbo].[COURSE] C ON P.ID_PROGRAM=C.ID_PROGRAM

SELECT C.*, U.[FIRST_NAME], U.[LAST_NAME], U.[EMAIL],P.TITLE,P.QUANTITY,P.DURATION
FROM [dbo].[USS] U INNER JOIN [dbo].[CODER] C ON U.ID_USER=C.ID_USER INNER JOIN [dbo].[PROGRAM] P ON P.ID_PROGRAM=C.ID_PROGRAM

--VISTAS
--MUESTRA EL CURSO RELACIONADO CON EL PROFESOR Y AL PROGRAMA QUE PERTENECE
GO
CREATE VIEW CURSO_PROGRAM_PROF
AS
SELECT        dbo.COURSE.ID_COURSE AS codigo, dbo.COURSE.NAME_COURSE AS curso, dbo.COURSE.ID_SCHEDULE AS Cronograma, dbo.PROFESSOR.ID_PROFESSOR AS id_profesor,
              dbo.PROGRAM.ID_PROGRAM AS codigo_program, dbo.PROGRAM.DURATION as duracion, dbo.PROGRAM.TITLE as titulo_program
FROM            dbo.COURSE INNER JOIN
dbo.PROFESSOR ON dbo.COURSE.ID_PROFESSOR = dbo.PROFESSOR.ID_PROFESSOR INNER JOIN
dbo.PROGRAM ON dbo.COURSE.ID_PROGRAM = dbo.PROGRAM.ID_PROGRAM
GO
SELECT * FROM CURSO_PROGRAM_PROF 

--MOSTRAR USUARIOS QUE SON CODER Y TIENEN DISCAPACIDAD
GO
CREATE VIEW CODER_US
AS
SELECT        dbo.CODER.ID_CODER, dbo.CODER.ID_USER, dbo.CODER.IMPAIRMENT, dbo.USS.FIRST_NAME, dbo.USS.LAST_NAME, dbo.USS.EMAIL, dbo.USS.DNI, dbo.USS.ID_LEVEL
FROM            dbo.CODER INNER JOIN dbo.USS ON dbo.CODER.ID_USER = dbo.USS.ID_USER WHERE dbo.CODER.IMPAIRMENT='1'
GO
SELECT * FROM CODER_US 
--MOSTRAR EL CURSO QUE LE PERTENECE AL DOCENTE Y SU USUARIO
GO
CREATE VIEW CURSO_DOCENTE
AS
SELECT        dbo.COURSE.*, dbo.PROFESSOR.ID_USER
FROM            dbo.PROFESSOR INNER JOIN
                dbo.COURSE ON dbo.PROFESSOR.ID_PROFESSOR = dbo.COURSE.ID_PROFESSOR
SELECT * FROM CURSO_DOCENTE
--PROCEDURES
--LLENAR TABLA STAFF
GO
CREATE PROC AGREGAR_STAFF
@ID_STAFF INT,
@NAME_STAFF VARCHAR(200),
@QUANT INT
AS
	INSERT INTO STAFF VALUES(
	@ID_STAFF,
	@NAME_STAFF,
	@QUANT
	)
GO
EXEC AGREGAR_STAFF 01,'MARKETING',2
EXEC AGREGAR_STAFF 02,'TECNOLOGIA',3
GO
SELECT * FROM STAFF

--MOSTRAR LOS USUARIOS QUE TIPO DE NIVEL TIENEN CON CODER, PROF
GO
CREATE PROC MOSTRAR_USS
@IDUS VARCHAR (5)
AS
SELECT [ID_USER],[FIRST_NAME],[LAST_NAME],[EMAIL],[ID_LEVEL] FROM [dbo].[USS] U
WHERE [ID_USER]=@IDUS
GO
EXEC MOSTRAR_USS 'C1234'

--
--TRIGGER
--INGRESAR INSCRIPCIÓN
GO
CREATE TRIGGER TR_INSERT_ENROLL
	ON [dbo].[ENROLLMENT]
	FOR INSERT 
AS
	PRINT 'SE INGRESO LA INSCRIPCIÓN'
GO
INSERT INTO [dbo].[ENROLLMENT] VALUES ('I1S','1',20)
INSERT INTO [dbo].[ENROLLMENT] VALUES ('I1N','0',20)
GO
--ACTUALIZAR EL NOMBRE DEL CURSO
CREATE TRIGGER TR_UP_CURSO
	ON [dbo].[COURSE]
	FOR UPDATE
AS
	PRINT 'SE ACTUALIZO LA TABLA CURSO'
GO
UPDATE [dbo].[COURSE] SET [NAME_COURSE]='LENGUAJE R' WHERE [ID_COURSE]='F2723'
SELECT * FROM COURSE
GO
--ELIMINAR UN CURSO SEGUN EL ID
CREATE TRIGGER TR_DEL_CURSO
	ON [dbo].[COURSE]
	FOR UPDATE
AS
	PRINT 'SE ELIMINO UN CURSO'
GO
DELETE [dbo].[COURSE] WHERE [ID_COURSE]='F3745'
SELECT * FROM COURSE